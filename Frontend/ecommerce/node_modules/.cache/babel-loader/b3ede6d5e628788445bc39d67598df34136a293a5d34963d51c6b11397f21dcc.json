{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'; // Correct import for thunk\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducers, productsListReducers } from './reducers/productsReducers';\nimport { userLoginReducers, userSignupReducers } from './reducers/userReducers';\nimport cartReducer from './reducers/cartReducer';\n\n// Combine all the reducers\nconst reducer = combineReducers({\n  productsList: productsListReducers,\n  productDetails: productDetailsReducers,\n  userLogin: userLoginReducers,\n  userSignup: userSignupReducers,\n  cart: cartReducer\n});\n\n// Load cart items from local storage if available\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\n// Initial state for the store\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\n\n// Apply thunk middleware\nconst middleware = [thunk];\n\n// Create Redux store with the reducer, initial state, and middleware\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducers","productsListReducers","userLoginReducers","userSignupReducers","cartReducer","reducer","productsList","productDetails","userLogin","userSignup","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"sources":["D:/Vehicle Management System/Frontend/ecommerce/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'; // Correct import for thunk\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducers, productsListReducers } from './reducers/productsReducers';\nimport { userLoginReducers, userSignupReducers } from './reducers/userReducers';\nimport cartReducer from './reducers/cartReducer';\n\n// Combine all the reducers\nconst reducer = combineReducers({\n  productsList: productsListReducers,\n  productDetails: productDetailsReducers,\n  userLogin: userLoginReducers,\n  userSignup: userSignupReducers,\n  cart: cartReducer,\n});\n\n// Load cart items from local storage if available\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\n// Initial state for the store\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n};\n\n// Apply thunk middleware\nconst middleware = [thunk];\n\n// Create Redux store with the reducer, initial state, and middleware\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa,CAAC,CAAC;AACjC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,sBAAsB,EAAEC,oBAAoB,QAAQ,6BAA6B;AAC1F,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,yBAAyB;AAC/E,OAAOC,WAAW,MAAM,wBAAwB;;AAEhD;AACA,MAAMC,OAAO,GAAGT,eAAe,CAAC;EAC9BU,YAAY,EAAEL,oBAAoB;EAClCM,cAAc,EAAEP,sBAAsB;EACtCQ,SAAS,EAAEN,iBAAiB;EAC5BO,UAAU,EAAEN,kBAAkB;EAC9BO,IAAI,EAAEN;AACR,CAAC,CAAC;;AAEF;AACA,MAAMO,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;;AAEN;AACA,MAAMG,YAAY,GAAG;EACnBN,IAAI,EAAE;IAAEO,SAAS,EAAEN;EAAqB;AAC1C,CAAC;;AAED;AACA,MAAMO,UAAU,GAAG,CAACpB,KAAK,CAAC;;AAE1B;AACA,MAAMqB,KAAK,GAAGxB,WAAW,CACvBU,OAAO,EACPW,YAAY,EACZjB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}